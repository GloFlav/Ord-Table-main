{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RASGF\\\\OneDrive\\\\Bureau\\\\Ord-Table-main\\\\src\\\\components\\\\Table\\\\TaskRow.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderCell = (tasks, tableType, taskType) => {\n  if (taskType === \"base\") return tasks.map(task => /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [tableType === \"early\" && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      children: [task.early_date, \"\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this), tableType === \"late\" && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      children: [task.late_date, \"\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this), task.id]\n  }, `${task.id}-base`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this));else if (taskType === \"next\") return tasks.map(task => /*#__PURE__*/_jsxDEV(\"td\", {\n    children: task.next_tasks ? task.next_tasks.toString() : \"-\"\n  }, `${task.id}-next`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this));\n};\nexport default function TaskRow(props) {\n  _s();\n  const listTasks = useSelector(state => state.listTasks);\n  const finalDate = useSelector(state => state.finalDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [props.tableType === \"input\" && /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.taskType === \"base\" ? \"Tâches\" : \"T.succ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), props.tableType === \"margin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 50\n      }, this), renderCell(listTasks, props.tableType, props.taskType), props.tableType === \"early\" && /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            float: \"left\"\n          },\n          children: [finalDate, \"\\xA0\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), \"Fin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TaskRow, \"tNm8RGsOPag5K5K++WQzT6AyoCE=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = TaskRow;\nvar _c;\n$RefreshReg$(_c, \"TaskRow\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","renderCell","tasks","tableType","taskType","map","task","children","style","float","early_date","fileName","_jsxFileName","lineNumber","columnNumber","late_date","id","next_tasks","toString","TaskRow","props","_s","listTasks","state","finalDate","_c","$RefreshReg$"],"sources":["C:/Users/RASGF/OneDrive/Bureau/Ord-Table-main/src/components/Table/TaskRow.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst renderCell = (tasks, tableType, taskType) => {\n    if (taskType === \"base\")\n        return tasks.map((task) => (\n            <td key={`${task.id}-base`}>\n                {tableType === \"early\" && (\n                    <span style={{ float: \"left\" }}>\n                        {task.early_date}&nbsp;&nbsp;\n                    </span>\n                )}\n                {tableType === \"late\" && (\n                    <span style={{ float: \"left\" }}>\n                        {task.late_date}&nbsp;&nbsp;\n                    </span>\n                )}\n                {task.id}\n            </td>\n        ));\n    else if (taskType === \"next\")\n        return tasks.map((task) => (\n            <td key={`${task.id}-next`}>\n                {task.next_tasks ? task.next_tasks.toString() : \"-\"}\n            </td>\n        ));\n};\n\nexport default function TaskRow(props) {\n    const listTasks = useSelector((state) => state.listTasks);\n    const finalDate = useSelector((state) => state.finalDate);\n    return (\n        <>\n            <tr>\n                {props.tableType === \"input\" && (\n                    <td>{props.taskType === \"base\" ? \"Tâches\" : \"T.succ\"}</td>\n                )}\n                {props.tableType === \"margin\" && <td>Tâches</td>}\n                {renderCell(listTasks, props.tableType, props.taskType)}\n                {props.tableType === \"early\" && (\n                    <td>\n                        <span style={{ float: \"left\" }}>\n                            {finalDate}&nbsp;&nbsp;\n                        </span>\n                        Fin\n                    </td>\n                )}\n            </tr>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}