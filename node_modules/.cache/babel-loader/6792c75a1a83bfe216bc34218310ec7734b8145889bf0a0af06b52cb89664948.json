{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RASGF\\\\OneDrive\\\\Bureau\\\\Ord-Table-main\\\\src\\\\components\\\\Table\\\\ResultRow.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ResultCell from \"./ResultCell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderCell = (tasks, tableType) => {\n  return tasks.map(task => /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(ResultCell, {\n      tableType: tableType,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this));\n};\nexport default function ResultRow(props) {\n  _s();\n  const listTasks = useSelector(state => state.listTasks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.tableType !== \"margin\" && /*#__PURE__*/_jsxDEV(\"tr\", {\n      id: props.tableType,\n      className: \"result-row\",\n      children: [renderCell(listTasks, props.tableType), props.tableType === \"early\" && /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(ResultCell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), props.tableType === \"margin\" && /*#__PURE__*/_jsxDEV(\"tr\", {\n      id: props.tableType,\n      className: \"result-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"p-2\",\n        children: \"Marges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), listTasks.map(task => /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"p-3\",\n        children: task.margin\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ResultRow, \"+17YPFkAdhdGzvNvSjoE+IJ7HRY=\", false, function () {\n  return [useSelector];\n});\n_c = ResultRow;\nvar _c;\n$RefreshReg$(_c, \"ResultRow\");","map":{"version":3,"names":["React","useSelector","ResultCell","jsxDEV","_jsxDEV","Fragment","_Fragment","renderCell","tasks","tableType","map","task","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ResultRow","props","_s","listTasks","state","className","margin","_c","$RefreshReg$"],"sources":["C:/Users/RASGF/OneDrive/Bureau/Ord-Table-main/src/components/Table/ResultRow.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ResultCell from \"./ResultCell\";\n\nconst renderCell = (tasks, tableType) => {\n    return tasks.map((task) => (\n        <td key={task.id}>\n            <ResultCell tableType={tableType} task={task} />\n        </td>\n    ));\n};\n\nexport default function ResultRow(props) {\n    const listTasks = useSelector((state) => state.listTasks);\n    return (\n        <>\n            {props.tableType !== \"margin\" && (\n                <tr id={props.tableType} className=\"result-row\">\n                    {renderCell(listTasks, props.tableType)}\n                    {props.tableType === \"early\" && (\n                        <td>\n                            <ResultCell />\n                        </td>\n                    )}\n                </tr>\n            )}\n            {props.tableType === \"margin\" && (\n                <tr id={props.tableType} className=\"result-row\">\n                    <td className=\"p-2\">Marges</td>\n                    {listTasks.map((task) => (\n                        <td key={task.id} className=\"p-3\">{task.margin}</td>\n                    ))}\n                </tr>\n            )}\n        </>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;EACrC,OAAOD,KAAK,CAACE,GAAG,CAAEC,IAAI,iBAClBP,OAAA;IAAAQ,QAAA,eACIR,OAAA,CAACF,UAAU;MAACO,SAAS,EAAEA,SAAU;MAACE,IAAI,EAAEA;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GAD3CL,IAAI,CAACM,EAAE;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CACP,CAAC;AACN,CAAC;AAED,eAAe,SAASE,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAMC,SAAS,GAAGpB,WAAW,CAAEqB,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,oBACIjB,OAAA,CAAAE,SAAA;IAAAM,QAAA,GACKO,KAAK,CAACV,SAAS,KAAK,QAAQ,iBACzBL,OAAA;MAAIa,EAAE,EAAEE,KAAK,CAACV,SAAU;MAACc,SAAS,EAAC,YAAY;MAAAX,QAAA,GAC1CL,UAAU,CAACc,SAAS,EAAEF,KAAK,CAACV,SAAS,CAAC,EACtCU,KAAK,CAACV,SAAS,KAAK,OAAO,iBACxBL,OAAA;QAAAQ,QAAA,eACIR,OAAA,CAACF,UAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACP,EACAG,KAAK,CAACV,SAAS,KAAK,QAAQ,iBACzBL,OAAA;MAAIa,EAAE,EAAEE,KAAK,CAACV,SAAU;MAACc,SAAS,EAAC,YAAY;MAAAX,QAAA,gBAC3CR,OAAA;QAAImB,SAAS,EAAC,KAAK;QAAAX,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9BK,SAAS,CAACX,GAAG,CAAEC,IAAI,iBAChBP,OAAA;QAAkBmB,SAAS,EAAC,KAAK;QAAAX,QAAA,EAAED,IAAI,CAACa;MAAM,GAArCb,IAAI,CAACM,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA,eACH,CAAC;AAEX;AAACI,EAAA,CAxBuBF,SAAS;EAAA,QACXjB,WAAW;AAAA;AAAAwB,EAAA,GADTP,SAAS;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}